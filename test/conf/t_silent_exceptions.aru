check silent_exceptions (Ada.Text_IO.Put_line, t_silent_exceptions.P);
search silent_exceptions (t_silent_exceptions.P,

-- Not used, resistance test:
         Ada.Text_Io.Put_Line, 
         Xfer_Error.Report,
         Error_Report.Report_Error,
         Task_Control.Kill_Me,
         Operation_Monitor_G.Stop, 
         An1_Connection_G.Report_Error,
         An1_Connection_G.Auto_Reject_If_Incorrect.Auto_Reject,
         Client_Server_Tcp_Comms_G.Report_Exception,
         Exit_Services.Force_Exit,
         Exit_Services.Report_Error,
         Exit_Services.Report_Info,
         Map.Recover_Exception,
         Map.Scenario.Exception_Encountered,
         Map.Cpm_Pool_Config.Show_File_Error_To_User,
         Itc_Services.Report_Error,
         all Raise_On_Client_Side,
         Tact_Update.Exceptions.Raise_Exception,
         Remote_Exception_G.Raise_Exception,
         Flight.Message_Indication_P.Doit.Report_Error,
         Flight_Deviation.Report_Severe_Error_And_Raise,
         Flight_Dyn.Report_Error,
         Flight_Incoming_Message.Construct.Get_Adexp_Fields.Raise_Syntax_Error,
         Regulation.Internals.Raise_Exception,
         Regulation.Internals.Raise_Internal_Error,
         Regulation.Internals.Raise_Parameter_Inconsistency_Error,
         Remote_Query_Reply.Build_Error_Reply,
         Saab_Process.Interactive_Error_Or_Crash,
         Tact_Msg.Raise_Syntax_Error,
         Uif_Error.Report,
         Uif_Error.Show_Error,
         Psal_Display.Slot_List.Slot_Operations.Analyse_Exception,
         Tacot_Io.Report_Error,
         Tacot_Io.Report_Info,
         Tacotify.Support.Report_Error,
         Tacotify.Support.Report_Warning,
         Tacot_Performance.Services.Performance.Signal_Error
        );
