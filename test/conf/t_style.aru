No_Closing_Name    : check  style (no_closing_name, 5);
No_Closing_Name    : search style (no_closing_name);
Casing             : search style (casing_identifier, Titlecase, original);
Casing             : search style (casing_aspect,     Titlecase);
Casing             : search style (casing_attribute,  Titlecase);
Casing             : search style (casing_pragma,     uppercase);
Casing             : search style (casing_keyword,    LOWERCASE);
No_Default_In      : search style (default_in);
Negative_Condition : check  style (negative_condition);
Renamed_Entity     : check  style (renamed_entity);
Literals           : check  style (numeric_literal,     10,  3);
Base_2_Literals    : check  style (numeric_literal,      2,  4);
Base_16_Literals   : check  style (numeric_literal,     16,  4);
Not_Base_7         : check  style (numeric_literal, not  7);
Not_Base_13        : check  style (numeric_literal, not 13);
Multiple_Clause    : check  style (multiple_elements, flexible clause);
Multiple_Decl      : check  style (multiple_elements, declaration);
Multiple_Stmts     : check  style (multiple_elements, statement);
Multiple_Handler   : check  style (multiple_elements, handler);
Multiple_Keyword   : check  style (multiple_elements, keywords);
Exposed            : check  style (exposed_literal, string, "^$", "^r.*n$", pragma, constant, number);
Exposed            : check  style (exposed_literal, integer, constant, number, var_init, type,
                                                             repr_clause, index, exponent,
                                                             max 1, 6, 7);
Exposed            : check  style (exposed_literal, real, 1.0, 0.0, -1.0, number, constant, statement);
Exposed            : check  style (exposed_literal, character, declaration);
Compound           : check  style (compound_statement);
order_regular      : check  style (parameter_order, in | access, out, in_out, defaulted_in);
order_generic      : check  style (formal_parameter_order, in | defaulted_in, in_out, type, procedure | function, package);
